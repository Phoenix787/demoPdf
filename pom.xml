<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.sergeeva</groupId>
	<artifactId>demoPdf</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>demoPdf</name>
	<description>Demo project for Spring Boot</description>

	<prerequisites>
		<maven>3</maven>
	</prerequisites>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.8.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<vaadin.version>8.1.5</vaadin.version>
		<vaadin.plugin.version>8.1.5</vaadin.plugin.version>
	</properties>


	<repositories>
		<!-- Vaadin addons repository -->
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- hot swapping, disable cache for template, enable live reload -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!--Mark this dependency for production mode to disable embedded tomcat-->
		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
			<!--<scope>provided</scope>-->
		<!--</dependency>-->


		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-devtools</artifactId>-->
			<!--<scope>runtime</scope>-->
		<!--</dependency>-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>


		<!--<dependency>-->
			<!--<groupId>com.vaadin</groupId>-->
			<!--<artifactId>vaadin-client</artifactId>-->
			<!--<scope>provided</scope>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>com.vaadin</groupId>-->
			<!--<artifactId>vaadin-themes</artifactId>-->
			<!--<scope>provided</scope>-->
		<!--</dependency>-->

		<!--ADDONS-->

		<dependency>
			<groupId>com.whitestein.vaadin.widgets</groupId>
			<artifactId>wt-pdf-viewer</artifactId>
			<version>1.0</version>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>com.vaadin</groupId>-->
			<!--<artifactId>vaadin-compatibility-client</artifactId>-->
			<!--<scope>provided</scope>-->
		<!--</dependency>-->

		<dependency>
			<groupId>org.vaadin.addon</groupId>
			<artifactId>easyuploads</artifactId>
			<version>8.0.0</version>
		</dependency><dependency>
		<groupId>com.google.gwt</groupId>
		<artifactId>gwt-servlet</artifactId>
		<version>2.2.0</version>
	</dependency>


		<!--<dependency>-->
			<!--<groupId>com.vaadin</groupId>-->
			<!--<artifactId>vaadin-client-compiler</artifactId>-->
			<!--<scope>provided</scope>-->
		<!--</dependency>-->


	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-bom</artifactId>
				<version>${vaadin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>



	<!--<build>-->

		<!--<plugins>-->
			<!--<plugin>-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-maven-plugin</artifactId>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-compiler-plugin</artifactId>-->
				<!--<configuration>-->
					<!--<source>1.8</source>-->
					<!--<target>1.8</target>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<!--&lt;!&ndash; Using client side Vaadin add-ons (Switch in this example)-->
                 <!--require a custom built "widgetset". Vaadin maven plugin does-->
                 <!--that automatically, here using a handy cloud service with CDN-->
                 <!--hosting.-->
            <!--&ndash;&gt;-->
			<!--<plugin>-->
				<!--<groupId>com.vaadin</groupId>-->
				<!--<artifactId>vaadin-maven-plugin</artifactId>-->
				<!--<version>${vaadin.version}</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<goals>-->
							<!--&lt;!&ndash; Needed for theme: &ndash;&gt;-->
							<!--<goal>update-widgetset</goal>-->
							<!--<goal>compile</goal>-->
							<!--&lt;!&ndash; Needed for theme: &ndash;&gt;-->
							<!--<goal>update-theme</goal>-->
							<!--<goal>compile-theme</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
				<!--<configuration>-->
					<!--&lt;!&ndash; Use local as value here for local widgetset compilation &ndash;&gt;-->
					<!--<widgetsetMode>cdn</widgetsetMode>-->
				<!--</configuration>-->
			<!--</plugin>-->
		<!--</plugins>-->
	<!--</build>-->




	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Exclude an unnecessary file generated by the GWT compiler. -->
					<packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
				</configuration>
			</plugin>


			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<!-- <modules> <module>com.vaadin.demo.mobilemail.gwt.ColorPickerWidgetSet</module>
                            </modules> -->
						</configuration>
						<goals>
							<goal>clean</goal>
							<goal>resources</goal>

							<!-- These are non functional currently with spring boot directory structure
                            <goal>update-theme</goal>
                            <goal>compile-theme</goal>
                             -->
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<goal>update-theme</goal>
							<goal>compile-theme</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<widgetsetMode>cdn</widgetsetMode>
					<!--<extraJvmArgs>-Xmx1g -Xss1024k</extraJvmArgs>-->

					<!--&lt;!&ndash; We are doing "inplace" gwt compilation-->
                    <!--but into subdir VAADIN/widgetsets &ndash;&gt;-->
					<!--<webappDirectory>src/main/resources/VAADIN/widgetsets-->
					<!--</webappDirectory>-->
					<!--<hostedWebapp>src/main/resources/VAADIN/widgetsets-->
					<!--</hostedWebapp>-->
					<!--<noServer>true</noServer>-->
					<!--&lt;!&ndash; Remove draftCompile when project is ready &ndash;&gt;-->
					<!--<draftCompile>true</draftCompile>-->
					<!--<persistentunitcachedir>${project.build.directory}/gwtdirt</persistentunitcachedir>-->
					<!--<compileReport>false</compileReport>-->
					<!--<style>OBF</style>-->
					<!--<strict>true</strict>-->
					<!--&lt;!&ndash; Symbol maps etc, not needed in vaadin app, just target them outside war &ndash;&gt;-->
					<!--<deploy>${project.build.directory}/gwt-deploy</deploy>-->
				</configuration>

			</plugin>
			<!--<plugin>-->
				<!--<artifactId>maven-resources-plugin</artifactId>-->
				<!--<executions>-->
					<!--&lt;!&ndash; ensure fresly compiled widgetset to jar, TODO check-->
                    <!--vaadin plugin configuration could get rid of this &ndash;&gt;-->
					<!--<execution>-->
						<!--<id>copy-resources</id>-->
						<!--<phase>prepare-package</phase>-->
						<!--<goals>-->
							<!--<goal>copy-resources</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--<outputDirectory>${basedir}/target/classes/VAADIN</outputDirectory>-->
							<!--<resources>-->
								<!--<resource>-->
									<!--<directory>${basedir}/src/main/resources/VAADIN</directory>-->
								<!--</resource>-->
							<!--</resources>-->
						<!--</configuration>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->

		</plugins>
	</build>


</project>
